{
    "projects": [
        {
            "title": "ToDoList",
            "id": 2,
            "date": "December 2022",
            "body": "ToDoList is a simple To-Do List application I created using JavaFX. This was a college project intended to test my understanding of Object-Oriented Programming principles and JavaFX.\n\nThe app allows users to add tasks to a To-Do List through a form specifying the task name, type and due date. Tasks of the same name cannot be submitted, but if a task with the same name and type is submitted with a different due date, then this simply updates the due date for the task. The To-Do List is displayed as a table showing the task, task type, time it was posted, and time that it is due. These tasks can be taken off the To-Do List when they are completed, and they are then displayed in a completed tasks table.\n\nAs this was a college project, I was not allowed to use any plug-ins so the code is all simple JavaFX. The code for the app is all in one file with one main ToDoList class that extends the Application class. Within this class we have the main and start functions as required by the Application class, as well as a nested class called Task. The main function launches the app while the start function contains the bulk of the code for the app. This includes the layout and UI on the front-end of the app as well as functions for enqueuing and dequeuing tasks from the To-Do List on the back-end of the app. The Task nested class represents a Task object which can be added to the observable array lists that contain the tasks that need to be done and the completed tasks. The class contains a constructor for Task objects, a copy constructor, and getters and setter to change Tasks attributes as necessary. Using a separate class to represent Tasks simplified the process of displaying the tasks on the users screen, changing the due date when needed, and implementing many other features of the app.\n\nAll in all, working on this To-Do List application allowed me to gain a basic understanding of JavaFX and see how Object-Oriented Programming principles can be used in practice to improve code. I intend to continue working on this project on my own outside of college where there are no restrictions in place to learn about more advanced JavaFX concepts and improve the app in general.",
            "preview": "ToDoList is a simple To-Do List application I created using JavaFX. This was a college project intended to test my understanding of Object-Oriented Programming principles and JavaFX.",
            "link": "https://github.com/rkhan71/ToDoList"
        },
        {
            "title": "myJim",
            "id": 3,
            "date": "June 2022",
            "body": "myJim is a web application I built using the Flask framework with Python, as well as SQL, HTML, CSS, and JavaScript. The application allows users to create accounts and upload data about their gym workouts so that they can track their progress over time.\n\nThe web app consists of 5 main pages: pages to register and login, a home page, a diary page, and a progress page.Users can create an account using a form on the register page which stores their unique username and password hash in an SQL table along with an id. This id is used to differentiate between users so that only information relevant to the user is shown on their screen. Once a user is registered, they can use the form on the login page to access their account. The if the username and password submitted from that form match a username and password hash stored in the SQL table, the user is granted access to that account.\n\nOnly once a user is logged in, they can access the diary and progress pages. The diary page contains a form which allows users to submit details about their workouts for a specific day. This information is stored in another SQL table along with the users id. At the bottom of the diary page, all the information the user has submitted for that particular day is shown in a table with buttons to delete entries. The progress page allows users to see their progress visually through graphs. Users can select the exercise they would like to see their progress in, then data for that exercise is collected from the SQL database and represented as a graph of weight and repetitions vs days. Multiple graphs can be shown at a time.\n\nUsing Python with the Flask framework, I can get all the form submissions from the web app and safely turn them into SQL queries. I can then pass any necessary data into HTML templates as variables. The HTML, CSS, and JavaScript is all used to implement the front end of the web app. I use Bootstrap 5 to aid with the design of the web app.",
            "preview": "myJim is a web application I built using the Flask framework with Python, as well as SQL, HTML, CSS, and JavaScript. The application allows users to create accounts and upload data about their gym workouts so that they can track their progress over time.",
            "link": "https://github.com/rkhan71/myJim"
        },
        {
            "title":"Title 3",
            "id": 4,
            "date": "May 2021",
            "body": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
            "preview": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
            "link": "https://github.com/rkhan71/myJim"
        }
    ],
    "education": [
        {
            "title": "Georgia Institute of Technology",
            "date": "August 2021 - December 2024",
            "body": ["Candidate for Bachelor of Science in Computer Science with 4.0 GPA", "Earned Faculty Honors in all semesters"]
        },
        {
            "title": "International School of Kenya",
            "date": "August 2016 - May 2021",
            "body": ["International Baccalaureate Diploma with 4 Higher Level Subjects (Math, Physics, Chemistry, Economics), scored 43/45 points which was a top 5 result in my grade"]
        }
    ]
}